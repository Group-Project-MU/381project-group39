<html>
    <!---Reference: https://leafletjs.com/ --->
    <title><%=info.name%></title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.2/dist/leaflet.css"/>
    <script src="https://unpkg.com/leaflet@1.9.2/dist/leaflet.js"></script>
    <link rel="stylesheet" type="text/css" href="css/detail.css">
    <body>
    <div class="container">
    <div class="innercontainer">
    <div class="imgcontainer">
    <% if (!info.file) {%>
      <img src="img/UnknowUser.jpeg" style="max-width: 200px;"><p>
    <% } else {%>
    <img src="data:image/png;base64,<%=info.file%>" style="max-width: 200px;"><p>
    <% } %>
    </div>
    <div class="infobox">
    <div class="info">Name: <%=info.name%></div>
    <div class="info">Age: <%=info.age%></div>
    <div class="info">Contact Number: <%=info.num%></div>
    <div class="info">Missing Date: <%=info.date%></div>
    <div class="infocom">Comment: <%=info.comment%></div>
    </div>
    <div class="info" style="margin-top: 5px; height: 170px;">Missing at:<div id="getName"></div></div>
    </div>
    </div>
    <div class="container" style="height: 300px;">
    <div class="mapcontainer">
    <div id="map"><p></div>
    <div class="updateform">
    <form action="/details" method="POST">
    <div class="updatecontainer">Location(lat):<input placeholder="Select from map" name="locx" id="locx" type="text"></div>
    <div class="updatecontainer">Location(lng):<input placeholder="Select from map" name="locy" id="locy" type="text"></div>
    <div class="updatecontainer">Meters:<input placeholder="0 for single point" name="rad" id="rad" type="text"></div>
    <div class="updatecontainer">Message:<input placeholder="Leave a message(optional)" name="msg" id="msg" type="text"></div>
    <div class="updatecontainer"><input type="submit" id="subbtn" value="Post" disabled></div>
        <input type="text" name="pcode" id="pcode" value="<%=info.postcode%>"   hidden readonly>
        <input type="text" name="username" id="username" value="<%=user%>"  hidden readonly>
    </form>
    </div>
    </div>
    </div>
    <center>
    <a href="/create">Create a new request</a>
	  <a href="/map">View Map</a>
    </center>
<script>
        let config = {
          minZoom: 7,
          maxZoom: 18,
        };
        // magnification 
        const zoom = 18;
        // co-ordinates
        const lat = <%= info.location[0]%>;
        const lng = <%= info.location[1]%>;
        
        var excalmation = L.icon({
            iconUrl: 'img/excalm.png',
            iconSize: [30, 40]
        });
        
       var question = L.icon({
            iconUrl: 'img/question.png',
            iconSize: [40, 50]
        });        
        
        // call map
        const map = L.map("map", config).setView([lat, lng], zoom);
        L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
          attribution:
            '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
        }).addTo(map);
        
        const markeruser = L.marker([<%= info.location%>],{icon: question}).addTo(map);
        markeruser.bindPopup('Initial missing point').openPopup();
        
    async function reversecode(lat, lng) {
        const url = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`;
        const response = await fetch(url);
        const streetname = await response.json();
        //document.getElementById('getName').textContent = JSON.stringify(streetname);
        document.getElementById('getName').textContent = JSON.stringify(streetname.display_name);
     }
     //test
     //reversecode(22.318071374752268,114.17000081946598);
     reversecode(<%=info.location%>);  
     
     //auto fill
             function onMapClick(event) {
            const point = L.popup();
            //point.setLatLng(event.latlng).setContent("Auto copied the coordinate: " + event.latlng.lat.toString() + "," + event.latlng.lng.toString()).openOn(map);
            const coor = event.latlng.lat + "," + event.latlng.lng
            navigator.clipboard.writeText(coor);
            document.getElementById("locx").value = event.latlng.lat.toString();
            document.getElementById("locy").value = event.latlng.lng.toString();
            checknull();
        }
       map.on('click', onMapClick);
      
      //check input
       const Rad = document.getElementById('rad');
       const Locx = document.getElementById('locx');
       const Locy = document.getElementById('locy');
       const submitbtn = document.getElementById('subbtn');
       
        function checknull() {
       //Set conditions, front end checking
       const cdt1 = Locx.value !== "" && Locy.value !== "";
        if ( cdt1 && Rad.value !== "") {
          submitbtn.removeAttribute("disabled");
        } else {
            submitbtn.setAttribute("disabled", "disabled");
          }
        }
       Locx.addEventListener('input',checknull);
       Locy.addEventListener('input',checknull);
       Rad.addEventListener('input',checknull);
       
            
       //looping info to map
       function loadmsg(msg) {
        msg.forEach(Msg => {
          var locx = parseFloat(Msg.locx),
              locy = parseFloat(Msg.locy),
              rad = parseFloat(Msg.rad),
              mess = Msg.msg;
          if ( rad === 0 ) {
              const markers = L.marker([locx, locy], {icon: excalmation}).addTo(map);
              markers.bindPopup(mess).openPopup();
          } else {
              const area = L.circle([locx, locy], 
              { color: 'green', 
              fillColor: 'lightgreen', 
              fillOpacity: 0.2,
              radius: rad}).addTo(map);
              area.bindPopup(mess).openPopup();
            }
          });
        }
        loadmsg(<%-JSON.stringify(info.message)%>);
       
</script>
    </body>
</html>
